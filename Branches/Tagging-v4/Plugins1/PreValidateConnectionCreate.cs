// <copyright file="PreValidateConnectionCreate.cs" company="Microsoft">
// Copyright (c) 2013 All Rights Reserved
// </copyright>
// <author>Microsoft</author>
// <date>7/11/2013 12:35:16 AM</date>
// <summary>Implements the PreValidateConnectionCreate Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
// </auto-generated>

using Microsoft.Xrm.Sdk.Query;

namespace Tagging.Plugins
{
    using System;
    using System.ServiceModel;
    using Microsoft.Xrm.Sdk;

    /// <summary>
    /// PreValidateConnectionCreate Plugin.
    /// </summary>    
    public class PreValidateConnectionCreate: Plugin
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PreValidateConnectionCreate"/> class.
        /// </summary>
        public PreValidateConnectionCreate()
            : base(typeof(PreValidateConnectionCreate))
        {
            RegisteredEvents.Add(new Tuple<int, string, string, Action<LocalPluginContext>>(20, "Create", "connection", ExecutePreValidateConnectionCreate));
        }

        /// <summary>
        /// Executes the plug-in.
        /// </summary>
        /// <param name="localContext">The <see cref="Plugin.LocalPluginContext"/> which contains the
        /// <see cref="IPluginExecutionContext"/>,
        /// <see cref="IOrganizationService"/>
        /// and <see cref="ITracingService"/>
        /// </param>
        protected void ExecutePreValidateConnectionCreate(LocalPluginContext localContext)
        {
            if (localContext == null)
            {
                throw new ArgumentNullException("localContext");
            }

            var connection = (Entity)localContext.PluginExecutionContext.InputParameters["Target"];
            new TagCountValidator(localContext.OrganizationService, connection).Execute();
        }
    }
}
